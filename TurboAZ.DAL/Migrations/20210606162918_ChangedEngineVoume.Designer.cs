// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurboAZ.DAL;

namespace TurboAZ.DAL.Migrations
{
    [DbContext(typeof(TurboDBContext))]
    [Migration("20210606162918_ChangedEngineVoume")]
    partial class ChangedEngineVoume
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TurboAZ.Entity.Models.Ad", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Abs")
                        .HasColumnType("bit");

                    b.Property<bool>("AlloyWheels")
                        .HasColumnType("bit");

                    b.Property<bool>("Barter")
                        .HasColumnType("bit");

                    b.Property<int>("BodyId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool>("CentralClosure")
                        .HasColumnType("bit");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<bool>("Conditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("CreditHave")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EngineVolumeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<int>("GearBoxId")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<bool>("LeatherSalon")
                        .HasColumnType("bit");

                    b.Property<bool>("Lyuk")
                        .HasColumnType("bit");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParkRadar")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("RainSensor")
                        .HasColumnType("bit");

                    b.Property<bool>("RearCamera")
                        .HasColumnType("bit");

                    b.Property<bool>("SeatHeating")
                        .HasColumnType("bit");

                    b.Property<bool>("SeatVent")
                        .HasColumnType("bit");

                    b.Property<bool>("SideCurtains")
                        .HasColumnType("bit");

                    b.Property<int>("TransmissionId")
                        .HasColumnType("int");

                    b.Property<int>("ValuteId")
                        .HasColumnType("int");

                    b.Property<int>("Walk")
                        .HasColumnType("int");

                    b.Property<bool>("XenonLamps")
                        .HasColumnType("bit");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("AdId");

                    b.HasIndex("BodyId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CityId");

                    b.HasIndex("ColorId");

                    b.HasIndex("EngineVolumeId");

                    b.HasIndex("FuelId");

                    b.HasIndex("GearBoxId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TransmissionId");

                    b.HasIndex("ValuteId");

                    b.HasIndex("YearId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Body", b =>
                {
                    b.Property<int>("BodyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BodyId");

                    b.ToTable("Bodies");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.EngineVolume", b =>
                {
                    b.Property<int?>("EngineVolumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("EngineVolumeName")
                        .HasColumnType("float");

                    b.HasKey("EngineVolumeId");

                    b.ToTable("EngineVolumes");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Fuel", b =>
                {
                    b.Property<int>("FuelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FuelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FuelId");

                    b.ToTable("Fuels");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.GearBox", b =>
                {
                    b.Property<int>("GearBoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GearBoxName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GearBoxId");

                    b.ToTable("GearBoxes");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdId")
                        .HasColumnType("int");

                    b.Property<int>("ImageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("AdId");

                    b.HasIndex("ImageTypeId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.ImageType", b =>
                {
                    b.Property<int>("ImageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageTypeId");

                    b.ToTable("ImageTypes");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Transmission", b =>
                {
                    b.Property<int>("TransmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransmissionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransmissionId");

                    b.ToTable("Transmissions");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Valute", b =>
                {
                    b.Property<int>("ValuteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ValuteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ValuteId");

                    b.ToTable("Valutes");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Year", b =>
                {
                    b.Property<int>("YearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("YearName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearId");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Ad", b =>
                {
                    b.HasOne("TurboAZ.Entity.Models.Body", "Body")
                        .WithMany("Ads")
                        .HasForeignKey("BodyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Brand", "Brand")
                        .WithMany("Ads")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.City", "City")
                        .WithMany("Ads")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Color", "Color")
                        .WithMany("Ads")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.EngineVolume", "EngineVolume")
                        .WithMany("Ads")
                        .HasForeignKey("EngineVolumeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Fuel", "Fuel")
                        .WithMany("Ads")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.GearBox", "GearBox")
                        .WithMany("Ads")
                        .HasForeignKey("GearBoxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Model", "Model")
                        .WithMany("Ads")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Transmission", "Transmission")
                        .WithMany("Ads")
                        .HasForeignKey("TransmissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Valute", "Valute")
                        .WithMany("Ads")
                        .HasForeignKey("ValuteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.Year", "Year")
                        .WithMany("Ads")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Body");

                    b.Navigation("Brand");

                    b.Navigation("City");

                    b.Navigation("Color");

                    b.Navigation("EngineVolume");

                    b.Navigation("Fuel");

                    b.Navigation("GearBox");

                    b.Navigation("Model");

                    b.Navigation("Transmission");

                    b.Navigation("Valute");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Image", b =>
                {
                    b.HasOne("TurboAZ.Entity.Models.Ad", "Ad")
                        .WithMany("Images")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboAZ.Entity.Models.ImageType", "ImageType")
                        .WithMany()
                        .HasForeignKey("ImageTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ad");

                    b.Navigation("ImageType");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Model", b =>
                {
                    b.HasOne("TurboAZ.Entity.Models.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Ad", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Body", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Brand", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Models");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.City", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Color", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.EngineVolume", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Fuel", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.GearBox", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Model", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Transmission", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Valute", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("TurboAZ.Entity.Models.Year", b =>
                {
                    b.Navigation("Ads");
                });
#pragma warning restore 612, 618
        }
    }
}
